{
  "id" : "5b15e1f2-aaa9-46e2-9ede-cbd8e61fb2cc",
  "parentId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "rootId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "name" : "root.SBG_Pair_FASTQs_by_Metadata",
  "app" : "data:text/plain;base64,ewogICJjb250cmlidXRvciIgOiBbIF0sCiAgIm93bmVyIiA6IFsgXSwKICAiY3dsVmVyc2lvbiIgOiAic2JnOmRyYWZ0LTIiLAogICJpbnB1dHMiIDogWyB7CiAgICAiaWQiIDogIiNmYXN0cV9saXN0IiwKICAgICJ0eXBlIiA6IFsgewogICAgICAiaXRlbXMiIDogIkZpbGUiLAogICAgICAidHlwZSIgOiAiYXJyYXkiCiAgICB9IF0sCiAgICAiaW5wdXRCaW5kaW5nIiA6IHsKICAgICAgIml0ZW1TZXBhcmF0b3IiIDogIiwiLAogICAgICAicG9zaXRpb24iIDogMCwKICAgICAgInByZWZpeCIgOiAiLS1mYXN0cV9saXN0IiwKICAgICAgInNiZzpjbWRJbmNsdWRlIiA6IHRydWUsCiAgICAgICJzZXBhcmF0ZSIgOiB0cnVlCiAgICB9LAogICAgInNiZzpzdGFnZUlucHV0IiA6ICJsaW5rIiwKICAgICJkZXNjcmlwdGlvbiIgOiAiTGlzdCBvZiB0aGUgRkFTVFEgZmlsZXMgd2l0aCBwcm9wZXJseSBzZXQgbWV0YWRhdGEgZmlsZWRzLiIsCiAgICAibGFiZWwiIDogIkxpc3Qgb2YgRkFTVFEgZmlsZXMiLAogICAgInNiZzpmaWxlVHlwZXMiIDogIkZBU1RRLCBGUSwgRkFTVFEuR1osIEZRLkdaIgogIH0gXSwKICAib3V0cHV0cyIgOiBbIHsKICAgICJpZCIgOiAiI3R1cGxlX2xpc3QiLAogICAgInR5cGUiIDogWyAibnVsbCIsIHsKICAgICAgIml0ZW1zIiA6ICJGaWxlIiwKICAgICAgInR5cGUiIDogImFycmF5IgogICAgfSBdCiAgfSBdLAogICJoaW50cyIgOiBbIHsKICAgICJjbGFzcyIgOiAiRG9ja2VyUmVxdWlyZW1lbnQiLAogICAgImRvY2tlclB1bGwiIDogImltYWdlcy5zYmdlbm9taWNzLmNvbS9uaWtvbGFfam92YW5vdmljL3NiZy1wYWlyLWZhc3Rxcy1ieS1tZXRhZGF0YTp2MSIsCiAgICAiZG9ja2VySW1hZ2VJZCIgOiAiZDQxYTA4MzdhYjgxIgogIH0sIHsKICAgICJjbGFzcyIgOiAic2JnOkNQVVJlcXVpcmVtZW50IiwKICAgICJ2YWx1ZSIgOiAxCiAgfSwgewogICAgImNsYXNzIiA6ICJzYmc6TWVtUmVxdWlyZW1lbnQiLAogICAgInZhbHVlIiA6IDEwMjQKICB9IF0sCiAgInJlcXVpcmVtZW50cyIgOiBbIHsKICAgICJjbGFzcyIgOiAiQ3JlYXRlRmlsZVJlcXVpcmVtZW50IiwKICAgICJmaWxlRGVmIiA6IFsgewogICAgICAiZmlsZUNvbnRlbnQiIDogImltcG9ydCBmdW5jdG9vbHNcbmltcG9ydCBqc29uXG5pbXBvcnQgaXRlcnRvb2xzXG5pbXBvcnQgZG9jb3B0XG5pbXBvcnQgc3lzXG5VU0FHRSA9IFwiXCJcIlxuICAgIFVzYWdlOlxuICAgICAgICBzYmdfcGFpcl9mYXN0cXNfYnlfbWV0YWRhdGEucHkgLS1mYXN0cV9saXN0IEZJTEUuLi4gLS1pbl9tZXRhZmlsZSBGSUxFIC0tb3V0X21ldGFmaWxlIEZJTEUgW29wdGlvbnNdXG5cbiAgICBEZXNjcmlwdGlvbjpcbiAgICAgICAgVG9vbCBhY2NlcHRzIGxpc3Qgb2YgRkFTVFEgZmlsZXMgZm9yIG9uZSBzYW1wbGUgYXMgdGhlIGlucHV0IGFuZCBncm91cHMgdGhlbSBpbnRvIHBhaXJzXG4gICAgICAgICh0d28gZmlsZXMgZm9yIGVhY2ggcGFpcmVkIGVuZCkuIFRoaXMgZ3JvdXBpbmcgaXMgZG9uZSB1c2luZyBtZXRhZGF0YSB2YWx1ZXMgdGhhdCBhcmUgY3JlYXRpbmdcbiAgICAgICAgdW5pcXVlIGNvbWJpbmF0aW9uIGZvciBlYWNoIHBhaXIgb3Igb2YgRkFTVFEgZmlsZXMuIE1ldGFkYXRhIHRoYXQgZmllbGRzIHRoYXQgYXJlIHVuaXF1ZWx5IGRlZmluaW5nXG4gICAgICAgIG9uZSBGQVNUUSBwYWlyIGFyZSBTYW1wbGUgSUQsIExpYnJhcnkgSUQsIFBsYXRmb3JtIFVuaXQgSUQgYW5kIEZpbGUgU2VnbWVudCBOdW1iZXIuXG4gICAgICAgIExpc3RlZCBvcmRlciBvZiBtZXRhZGF0YSBmaWVsZHMgaXMgYWxzbyByZXByZXNlbnRpbmcgdGhlaXIgaGllcmFyY2h5IGluIHRoZSBtZXRhZGF0YSBzdHJ1Y3R1cmUuXG4gICAgICAgIE5vdCBhbGwgb2YgdGhlc2UgZm91ciBtZXRhZGF0YSBmaWVsZHMgYXJlIHJlcXVpcmVkLCBidXQgdGhlIHByZXNlbnQgc2V0IGhhcyB0byBiZSBzdWZmaWNpZW50IHRvIGNyZWF0ZVxuICAgICAgICB1bmlxdWUgY29tYmluYXRpb25zIGZvciBlYWNoIHBhaXIgb2YgRkFTVFEgZmlsZXMuIElmIG11bHRpcGxlIGZpbGVzIGhhdmUgdGhlIHNhbWUgbWV0YWRhdGEgYW5kIHRoZXkgY2FuJ3RcbiAgICAgICAgYmUgcGFpcmVkIGluIHRoZSBsaXN0IG9mIDIgZWxlbWVudHMsIHRoZSB0b29sIHdpbGwgcmV0dXJuIGEgbWV0YWRhdGEgZXJyb3Igc28gdGhlIG1ldGFkYXRhIGNhbiBiZSBwcm9wZXJseSBzZXQuXG5cbiAgICBPcHRpb25zOlxuXG4gICAgICAgIC0taGVscCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2hvdyBoZWxwIGRpYWxvZy5cblxuICAgICAgICAtLXZlcnNpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRvb2wgdmVyc2lvbi5cblxuICAgICAgICAtLWZhc3RxX2xpc3QgRklMRS4uLiAgICAgICAgICAgICAgICAgIExpc3Qgb2YgdGhlIEZBU1RRIGZpbGVzIHdpdGggcHJvcGVybHkgc2V0IG1ldGFkYXRhIGZpZWxkcy5cblxuICAgICAgICAtLWluX21ldGFmaWxlIEZJTEUgICAgICAgICAgICAgICAgICAgIEZpbGUgZnJvbSB3aGljaCBuZWNlc3NhcnkgbWV0YWRhdGEgaW5mb3JtYXRpb24gd2lsbCBiZSBleHRyYWN0ZWQuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhwZWN0ZWQgdmFsdWUgZm9yIHRoZSBTQkcgcGxhdGZvcm0gaXMgam9iLmpzb24uIFtEZWZhdWx0OiBqb2IuanNvbl1cblxuICAgICAgICAtLW91dF9tZXRhZmlsZSBGSUxFICAgICAgICAgICAgICAgICAgIEZpbGUgaW50byB3aGljaCBuZWNlc3NhcnkgZmlsZSBzdHJ1Y3R1cmUgaXMgZ29pbmcgdG8gYmUgd3JpdHRlbi5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeHBlY3RlZCB2YWx1ZSBmb3IgdGhlIFNCRyBwbGF0Zm9ybSBpcyBjd2wub3V0cHV0Lmpzb24uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW0RlZmF1bHQ6IGN3bC5vdXRwdXQuanNvbl1cblxuXG5cIlwiXCJcblxuXG5jbGFzcyBNZXRhZGF0YUVycm9yKEV4Y2VwdGlvbik6XG4gICAgIyBDbGFzcyBmb3IgaGFuZGxpbmcgZ3JvdXBzIHdoZXJlIG9uZSBmaWxlIGhhcyBwYWlyZWQgZW5kIG1ldGFkYXRhIHNldCBhbmQgb3RoZXIgZG9lc24ndFxuICAgIGRlZiBfX2luaXRfXyhzZWxmLCB2YWx1ZSk6XG4gICAgICAgIHNlbGYudmFsdWUgPSB2YWx1ZVxuXG4gICAgZGVmIF9fc3RyX18oc2VsZik6XG4gICAgICAgIHJldHVybiByZXByKHNlbGYudmFsdWUpXG5cblxuZGVmIG1ha2VfcmdfaWQobWV0YWRhdGFfa2V5LCBpbnB1dDEpOlxuXG4gICAgIyBGdW5jdGlvbiB0aGF0IGdldHMgYWxsIHRoZSBtZXRhZGF0YSBmaWVsZHMgdGhhdCBhcmUgc2V0IGZvciBhIGZpbGUsIHNvIGl0IGNhblxuICAgICMgc29ydCB0aGUgZmlsZXMgYmFzZWQgb24gdGhpcyBtZXRhZGF0YSBmb3IgZ3JvdXBpbmdcblxuICAgIGlucHV0X21ldGEgPSBpbnB1dDFbJ21ldGFkYXRhJ11cbiAgICBzID0gJ19fIV9fJ1xuICAgIHJnID0gbGlzdCgpXG4gICAgZm9yIGtleSBpbiBbJ3NhbXBsZV9ncm91cCcsICdzYW1wbGVfaWQnLCAnbGlicmFyeV9pZCcsICdwbGF0Zm9ybV91bml0X2lkJ106XG4gICAgICAgIGlmIGtleSBpbiBpbnB1dF9tZXRhOlxuICAgICAgICAgICAgcmcuYXBwZW5kKGlucHV0X21ldGFba2V5XSlcbiAgICAgICAgZWxzZTpcbiAgICAgICAgICAgIHJnLmFwcGVuZCgnJylcbiAgICBpZiAnZmlsZV9zZWdtZW50X251bWJlcicgaW4gaW5wdXRfbWV0YSBhbmQgaW5wdXRfbWV0YVsnZmlsZV9zZWdtZW50X251bWJlciddIGlzIG5vdCBOb25lOlxuICAgICAgICByZy5hcHBlbmQoc3RyKGlucHV0X21ldGFbJ2ZpbGVfc2VnbWVudF9udW1iZXInXSkpXG4gICAgZWxzZTpcbiAgICAgICAgcmcuYXBwZW5kKCcnKVxuXG4gICAgIyBNZXRhZGF0YSBoaWVyYXJjaHk6IFNhbXBsZV9JRCA+IExpYnJhcnlfSUQgPiBQbGF0Zm9ybV9Vbml0X0lEID4gRmlsZV9TZWdtZW50X051bWJlclxuICAgICMgQnkgZGVmYXVsdCBmaWxlcyB3aWxsIGJlIHNwbGl0IHVzaW5nIGZpbGUgc2VnbWVudCBudW1iZXIsIHdoaWNoIGlzIHRoZSBsb3dlc3QgaW5cbiAgICAjIFRoZSBtZXRhZGF0YSBoaWVyYXJjaHksIGlmIHRoZXkgaGF2ZSB0aGUgc2FtZSBTYW1wbGUgSUQgb3IgYW55IG9mIHRoZSBoaWdoZXIgdGllcnMsIHRoZXkgd2lsbCBiZSBncm91cGVkIGJ5IHRoaXNcbiAgICByZ19tYXAgPSB7XG4gICAgICAgICdzYW1wbGVfaWQnOiByZ1s6Ml0sXG4gICAgICAgICdsaWJyYXJ5X2lkJzogcmdbOjNdLFxuICAgICAgICAncGxhdGZvcm1fdW5pdF9pZCc6IHJnWzo0XSxcbiAgICAgICAgJ2ZpbGVfc2VnbWVudF9udW1iZXInOiByZ1s6NV0sXG4gICAgfVxuXG4gICAgcmV0dXJuIHMuam9pbihyZ19tYXBbbWV0YWRhdGFfa2V5XSkgaWYgbWV0YWRhdGFfa2V5IGluIHJnX21hcCBlbHNlIGdldGF0dHIoaW5wdXRfbWV0YSwgbWV0YWRhdGFfa2V5KVxuXG5cbmRlZiBncm91cF9pbnB1dHMoaW5wKTpcblxuICAgIG1ldGFkYXRhX2tleSA9ICdmaWxlX3NlZ21lbnRfbnVtYmVyJ1xuICAgIGtleV9nZXR0ZXIgPSBmdW5jdG9vbHMucGFydGlhbChtYWtlX3JnX2lkLCBtZXRhZGF0YV9rZXkpXG4gICAgZmlsZXMgPSBzb3J0ZWQoW3ggZm9yIHggaW4gaW5wXSwga2V5PWtleV9nZXR0ZXIpXG4gICAgIyBGaWxlcyBhcmUgc3BsaXQgaW50byBsaXN0cyBvZiBzYW1lIG1ldGFkYXRhIGhpZXJhcmNoaWVzXG4gICAgdHVwbGVfbGlzdF90ZW1wID0gW1tmIGZvciBmIGluIHZhbF0gZm9yIGtleSwgdmFsIGluIGl0ZXJ0b29scy5ncm91cGJ5KGZpbGVzLCBrZXlfZ2V0dGVyKV1cbiAgICB0dXBsZV9saXN0ID0gbGlzdCgpXG4gICAgIyBHcm91cGluZyBmaWxlcyBiYXNlZCBvbiBtZXRhZGF0YVxuICAgIGZvciBlbGVtIGluIHR1cGxlX2xpc3RfdGVtcDpcbiAgICAgICAgIyBDaGVjayBmb3IgbXVsdGlwbGUgZmlsZXMgd2l0aCBzYW1lIG1ldGFkYXRhIC0gc2hvdWxkbid0IGJlIG1vcmUgdGhhbiAyIGdyb3VwZWRcbiAgICAgICAgaWYgbGVuKGVsZW0pID4gMjpcbiAgICAgICAgICAgIGVycm9yX21zZyA9ICdNZXRhZGF0YSBlcnJvcjonXG4gICAgICAgICAgICBlcnJvcl9tc2cgKz0gJ01vcmUgdGhhbiB0d28gZmlsZXMgYXJlIGdyb3VwZWQhIENoZWNrIGlmIHlvdSBoYXZlIHNldCB0aGUgbWV0YWRhdGEgZm9yIHRoZXNlIGZpbGVzOiAnXG4gICAgICAgICAgICBmb3IgaSBpbiBlbGVtOlxuICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSBpWydwYXRoJ10uc3BsaXQoXCIvXCIpWy0xXVxuICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSAnICdcbiAgICAgICAgICAgIHJhaXNlIE1ldGFkYXRhRXJyb3IoZXJyb3JfbXNnKVxuICAgICAgICAgICAgIyBicmVha1xuICAgICAgICBpZiAncGFpcmVkX2VuZCcgaW4gZWxlbVswXVsnbWV0YWRhdGEnXSBhbmQgbGVuKGVsZW0pID4gMTpcbiAgICAgICAgICAgIGlmICdwYWlyZWRfZW5kJyBub3QgaW4gZWxlbVsxXVsnbWV0YWRhdGEnXTpcbiAgICAgICAgICAgICAgICAjIElmIHNlY29uZCBkb2Vzbid0IGhhdmUgcGFpcmVkX2VuZCBhbmQgZmlyc3QgZG9lcyAtIGZhaWwgYW5kIHJhaXNlIGFuIGV4Y2VwdGlvblxuICAgICAgICAgICAgICAgIGVycm9yX21zZyA9ICdNZXRhZGF0YSBlcnJvcjonXG4gICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICdwYWlyZWRfZW5kIG1ldGFkYXRhIG5vdCBzZXQgZm9yIG9uZSBvZiB0d28gZmlsZXMuIENoZWNrIG1ldGFkYXRhIGZvciBmaWxlOiAnXG4gICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9IGVsZW1bMV1bJ3BhdGgnXS5zcGxpdChcIi9cIilbLTFdXG4gICAgICAgICAgICAgICAgcmFpc2UgTWV0YWRhdGFFcnJvcihlcnJvcl9tc2cpXG4gICAgICAgICAgICAgICAgIyBicmVha1xuICAgICAgICAgICAgIyBJZiBzZXQsIGNoZWNrIGZvciBzZWNvbmRcbiAgICAgICAgICAgIGlmIGVsZW1bMF1bJ21ldGFkYXRhJ11bJ3BhaXJlZF9lbmQnXSA9PSBcIjJcIjpcbiAgICAgICAgICAgICAgICB0dXBsZV9saXN0LmFwcGVuZChbZWxlbVswXSwgZWxlbVsxXV0pXG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgIGVsc2U6XG4gICAgICAgICAgICAgICAgdHVwbGVfbGlzdC5hcHBlbmQoW2VsZW1bMF0sIGVsZW1bMV1dKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIGVsc2U6XG4gICAgICAgICAgICAjIGlmIGZpcnN0IGZpbGUgZG9lc24ndCBoYXZlIHBhaXJlZF9lbmQgYW5kIHNlY29uZCBmaWxlIGRvZXMgLSBmYWlsIGFuZCByYWlzZSBhbiBleGNlcHRpb25cbiAgICAgICAgICAgIGlmIGxlbihlbGVtKSA9PSAyIGFuZCAncGFpcmVkX2VuZCcgaW4gZWxlbVswXVsnbWV0YWRhdGEnXTpcbiAgICAgICAgICAgICAgICBpZiAncGFpcmVkX2VuZCcgaW4gZWxlbVsxXVsnbWV0YWRhdGEnXTpcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnID0gJ01ldGFkYXRhIGVycm9yOidcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JfbXNnICs9ICdwYWlyZWRfZW5kIG1ldGFkYXRhIG5vdCBzZXQgZm9yIG9uZSBvZiB0d28gZmlsZXMuIENoZWNrIG1ldGFkYXRhIGZvciBmaWxlOiAnXG4gICAgICAgICAgICAgICAgICAgIGVycm9yX21zZyArPSBlbGVtWzBdWydwYXRoJ10uc3BsaXQoXCIvXCIpWy0xXVxuICAgICAgICAgICAgICAgICAgICAjIGJyZWFrXG4gICAgICAgICAgICAjIGdyb3VwIHRvZ2V0aGVyIHNpbmd1bGFyIGZpbGVzLCB3aXRoIG5vIHBhaXJlZF9lbmQgc2V0IChzaW5nbGUgcGFpciBzZXF1ZW5jaW5nKVxuICAgICAgICAgICAgaWYgbGVuKGVsZW0pID09IDE6XG4gICAgICAgICAgICAgICAgdHVwbGVfbGlzdC5hcHBlbmQoW2VsZW1bMF1dKVxuICAgICAgICAgICAgZWxzZTpcbiAgICAgICAgICAgICAgICB0dXBsZV9saXN0LmFwcGVuZChbZWxlbVswXSwgZWxlbVsxXV0pXG4gICAgICAgICAgICBjb250aW51ZVxuXG4gICAgcmV0dXJuIHR1cGxlX2xpc3RcblxuXG5kZWYgbWFpbigpOlxuXG4gICAgYXJncyA9IGRvY29wdC5kb2NvcHQoVVNBR0UsIHZlcnNpb249MS4wKVxuXG4gICAgam9iX2pzb24gPSBhcmdzW1wiLS1pbl9tZXRhZmlsZVwiXVxuICAgIGpvYl9qc29uX2ZpbGUgPSBvcGVuKGpvYl9qc29uKVxuICAgIGpvYl9qc29uX3N0ciA9IGpvYl9qc29uX2ZpbGUucmVhZCgpXG4gICAgam9iX2pzb25fZGljdCA9IGpzb24ubG9hZHMoam9iX2pzb25fc3RyKVxuICAgIGZpbGVfbGlzdCA9IFtlbGVtIGZvciBlbGVtIGluIGpvYl9qc29uX2RpY3RbJ2lucHV0cyddW1wiZmFzdHFfbGlzdFwiXV1cbiAgICB0dXBsZV9saXN0ID0ge31cbiAgICB0cnk6XG4gICAgICAgIHR1cGxlX2xpc3QgPSBncm91cF9pbnB1dHMoZmlsZV9saXN0KVxuICAgIGV4Y2VwdCBNZXRhZGF0YUVycm9yIGFzIGVycjpcbiAgICAgICAgc3lzLnN0ZGVyci53cml0ZShzdHIoZXJyKSlcbiAgICAgICAgZXhpdCgxKVxuXG4gICAgdHVwbGVfbGlzdF9kaWN0ID0ge1widHVwbGVfbGlzdFwiOiB0dXBsZV9saXN0fVxuICAgIHdpdGggb3BlbihhcmdzW1wiLS1vdXRfbWV0YWZpbGVcIl0sICd3JykgYXMgcDpcbiAgICAgICAganNvbi5kdW1wKHR1cGxlX2xpc3RfZGljdCwgcClcbiAgICBleGl0KDApXG5cbmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6XG4gICAgbWFpbigpIiwKICAgICAgImZpbGVuYW1lIiA6ICJwYWlyX2Zhc3Rxc19ieV9tZXRhZGF0YS5weSIKICAgIH0gXQogIH0gXSwKICAic3VjY2Vzc0NvZGVzIiA6IFsgXSwKICAic3RkaW4iIDogIiIsCiAgInN0ZG91dCIgOiAiIiwKICAiYmFzZUNvbW1hbmQiIDogWyAicHl0aG9uIiwgInBhaXJfZmFzdHFzX2J5X21ldGFkYXRhLnB5IiBdLAogICJhcmd1bWVudHMiIDogWyB7CiAgICAicG9zaXRpb24iIDogMSwKICAgICJwcmVmaXgiIDogIi0taW5fbWV0YWZpbGUiLAogICAgInNlcGFyYXRlIiA6IHRydWUsCiAgICAidmFsdWVGcm9tIiA6ICJqb2IuanNvbiIKICB9LCB7CiAgICAicG9zaXRpb24iIDogMiwKICAgICJwcmVmaXgiIDogIi0tb3V0X21ldGFmaWxlIiwKICAgICJzZXBhcmF0ZSIgOiB0cnVlLAogICAgInZhbHVlRnJvbSIgOiAiY3dsLm91dHB1dC5qc29uIgogIH0gXSwKICAic2JnOnJldmlzaW9uIiA6IDcsCiAgInNiZzpjYXRlZ29yaWVzIiA6IFsgIkNvbnZlcnRlcnMiLCAiT3RoZXIiIF0sCiAgImRlc2NyaXB0aW9uIiA6ICJUb29sIGFjY2VwdHMgbGlzdCBvZiBGQVNUUSBmaWxlcyBncm91cHMgdGhlbSBpbnRvIHNlcGFyYXRlIGxpc3RzLiBUaGlzIGdyb3VwaW5nIGlzIGRvbmUgdXNpbmcgbWV0YWRhdGEgdmFsdWVzIGFuZCB0aGVpciBoaWVyYXJjaHkgKFNhbXBsZSBJRCA+IExpYnJhcnkgSUQgPiBQbGF0Zm9ybSB1bml0IElEID4gRmlsZSBzZWdtZW50IG51bWJlcikgd2hpY2ggc2hvdWxkIGNyZWF0ZSB1bmlxdWUgY29tYmluYXRpb25zIGZvciBlYWNoIHBhaXIgb2YgRkFTVFEgZmlsZXMuIEltcG9ydGFudCBtZXRhZGF0YSBmaWVsZHMgYXJlIFNhbXBsZSBJRCwgTGlicmFyeSBJRCwgUGxhdGZvcm0gdW5pdCBJRCBhbmQgRmlsZSBzZWdtZW50IG51bWJlci4gTm90IGFsbCBvZiB0aGVzZSBmb3VyIG1ldGFkYXRhIGZpZWxkcyBhcmUgcmVxdWlyZWQsIGJ1dCB0aGUgcHJlc2VudCBzZXQgaGFzIHRvIGJlIHN1ZmZpY2llbnQgdG8gY3JlYXRlIHVuaXF1ZSBjb21iaW5hdGlvbnMgZm9yIGVhY2ggcGFpciBvZiBGQVNUUSBmaWxlcy4gRmlsZXMgd2l0aCBubyBwYWlyZWQgZW5kIG1ldGFkYXRhIGFyZSBncm91cGVkIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgb25lcyB3aXRoIHBhaXJlZCBlbmQgbWV0YWRhdGEsIGdlbmVyYWxseSB0aGV5IHNob3VsZCBiZSBhbG9uZSBpbiBhIHNlcGFyYXRlIGxpc3QuIEZpbGVzIHdpdGggbm8gbWV0YWRhdGEgc2V0IHdpbGwgYmUgZ3JvdXBlZCB0b2dldGhlciwgYW5kIHRoZXJlIHdpbGwgYmUgYW4gZXJyb3IgcmFpc2VkIGlmIHRoZXJlIGFyZSBtb3JlIHRoYW4gMiBvZiB0aGVzZSBmaWxlcyB0b2dldGhlci4gXG5cbklmIHRoZXJlIGFyZSBtb3JlIHRoYW4gdHdvIGZpbGVzIGluIGEgZ3JvdXAsIHRoaXMgaXMgY29uc2lkZXJlZCBhbiBlcnJvciwgYW5kIHRoZSB1c2VyIHNob3VsZCBjaGVjayBpZiB0aGUgbWV0YWRhdGEgZmllbGRzIGZvciB0aG9zZSBmaWxlcyBhcmUgc2V0IHByb3Blcmx5LiBBbHNvIGlmIHRoZXJlIGlzIGEgZmlsZSB0aGF0IGhhcyBwYWlyZWQgZW5kIG1ldGFkYXRhIHNldCBhbmQgaXMgZ3JvdXBlZCB3aXRoIGFub3RoZXIgd2l0aCBubyBwYWlyZWQgZW5kIG1ldGFkYXRhLCB0aGUgdG9vbCB3aWxsIHJldHVybiBhbiBlcnJvci4gSWYgdGhlcmUgaXMgb25seSBvbmUgZmlsZSB3aXRoIHBhaXJlZCBlbmQgbWV0YWRhdGEgc2V0IGFuZCBpdCBkb2Vzbid0IGhhdmUgYSBwYWlyIHByb3ZpZGVkLCBpdCB3aWxsIGJlIGdyb3VwZWQgaW50byBhIHNlcGFyYXRlIGxpc3QuXG5cbkNoZWNrIGZvciBtZXRhZGF0YSBlcnJvcnMgaW4gam9iLmVyci5sb2csIHRoZXkgd2lsbCBwb2ludCB0byB0aGUgZmlsZXMgd2hvc2UgbWV0YWRhdGEgc2hvdWxkIGJlIGNoZWNrZWQuIiwKICAic2JnOmNyZWF0ZWRPbiIgOiAxNDUwOTExMjg5LAogICJzYmc6Y29udHJpYnV0b3JzIiA6IFsgInZsYWRpbWlyayIsICJtYXJrb3AiLCAibmlrb2xhX2pvdmFub3ZpYyIsICJiaXgtZGVtbyIgXSwKICAic2JnOnRvb2xraXQiIDogIlNCR1Rvb2xzIiwKICAic2JnOmlkIiA6ICJiaXgtZGVtby9zYmd0b29scy1kZW1vL3NiZy1wYWlyLWZhc3Rxcy1ieS1tZXRhZGF0YS83IiwKICAic2JnOmpvYiIgOiB7CiAgICAiYWxsb2NhdGVkUmVzb3VyY2VzIiA6IHsKICAgICAgImNwdSIgOiAxLAogICAgICAibWVtIiA6IDEwMjQKICAgIH0sCiAgICAiaW5wdXRzIiA6IHsKICAgICAgImZhc3RxX2xpc3QiIDogWyB7CiAgICAgICAgImNsYXNzIiA6ICJGaWxlIiwKICAgICAgICAicGF0aCIgOiAiL2FzZGEvZHNhL3NkYS9zZGEvZmFzdGExLmZhc3RxIiwKICAgICAgICAic2Vjb25kYXJ5RmlsZXMiIDogWyBdLAogICAgICAgICJzaXplIiA6IDAKICAgICAgfSwgewogICAgICAgICJwYXRoIiA6ICIvYXNkYS9kc2Evc2RhL3NkYS9mYXN0YTIuZmFzdHEiCiAgICAgIH0sIHsKICAgICAgICAicGF0aCIgOiAiL2FzZGEvZHNhL3NkYS9zZGEvZmFzdGEzLmZhc3RxIgogICAgICB9LCB7CiAgICAgICAgInBhdGgiIDogIi9hc2RhL2RzYS9zZGEvc2RhL2Zhc3RhNC5mYXN0cSIKICAgICAgfSBdCiAgICB9CiAgfSwKICAic2JnOnNiZ01haW50YWluZWQiIDogZmFsc2UsCiAgInRlbXBvcmFyeUZhaWxDb2RlcyIgOiBbIF0sCiAgInNiZzp0b29sQXV0aG9yIiA6ICJEam9yZGplIEtsaXNpYywgU2V2ZW4gQnJpZGdlcyBHZW5vbWljcywgPGRqb3JkamUua2xpc2ljQHNiZ2Vub21pY3MuY29tPiIsCiAgImlkIiA6ICJodHRwczovL2FwaS5zYmdlbm9taWNzLmNvbS92Mi9hcHBzL2JpeC1kZW1vL3NiZ3Rvb2xzLWRlbW8vc2JnLXBhaXItZmFzdHFzLWJ5LW1ldGFkYXRhLzcvcmF3LyIsCiAgImNsYXNzIiA6ICJDb21tYW5kTGluZVRvb2wiLAogICJzYmc6cHJvamVjdCIgOiAiYml4LWRlbW8vc2JndG9vbHMtZGVtbyIsCiAgInNiZzptb2RpZmllZE9uIiA6IDE0ODk2NjUwNDYsCiAgInNiZzpjbWRQcmV2aWV3IiA6ICJweXRob24gcGFpcl9mYXN0cXNfYnlfbWV0YWRhdGEucHkgLS1mYXN0cV9saXN0IC9hc2RhL2RzYS9zZGEvc2RhL2Zhc3RhMS5mYXN0cSwvYXNkYS9kc2Evc2RhL3NkYS9mYXN0YTIuZmFzdHEsL2FzZGEvZHNhL3NkYS9zZGEvZmFzdGEzLmZhc3RxLC9hc2RhL2RzYS9zZGEvc2RhL2Zhc3RhNC5mYXN0cSAtLWluX21ldGFmaWxlIGpvYi5qc29uIC0tb3V0X21ldGFmaWxlIGN3bC5vdXRwdXQuanNvbiIsCiAgInNiZzpwcm9qZWN0TmFtZSIgOiAiU0JHVG9vbHMgLSBEZW1vIE5ldyIsCiAgInNiZzpsaWNlbnNlIiA6ICJBcGFjaGUgTGljZW5zZSAyLjAiLAogICJsYWJlbCIgOiAiU0JHIFBhaXIgRkFTVFFzIGJ5IE1ldGFkYXRhIiwKICAic2JnOm1vZGlmaWVkQnkiIDogIm5pa29sYV9qb3Zhbm92aWMiLAogICJzYmc6YXBwVmVyc2lvbiIgOiBbICJzYmc6ZHJhZnQtMiIgXSwKICAic2JnOmxhdGVzdFJldmlzaW9uIiA6IDcsCiAgInNiZzpjcmVhdGVkQnkiIDogImJpeC1kZW1vIiwKICAic2JnOmltYWdlX3VybCIgOiBudWxsLAogICJzYmc6cmV2aXNpb25zSW5mbyIgOiBbIHsKICAgICJzYmc6bW9kaWZpZWRCeSIgOiAiYml4LWRlbW8iLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0NTA5MTEyODksCiAgICAic2JnOnJldmlzaW9uIiA6IDAsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogbnVsbAogIH0sIHsKICAgICJzYmc6bW9kaWZpZWRCeSIgOiAiYml4LWRlbW8iLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0NTA5MTEyOTAsCiAgICAic2JnOnJldmlzaW9uIiA6IDEsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogbnVsbAogIH0sIHsKICAgICJzYmc6bW9kaWZpZWRCeSIgOiAiYml4LWRlbW8iLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0NTA5MTEyOTAsCiAgICAic2JnOnJldmlzaW9uIiA6IDIsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogbnVsbAogIH0sIHsKICAgICJzYmc6bW9kaWZpZWRCeSIgOiAiYml4LWRlbW8iLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0NjM0MDMyNzYsCiAgICAic2JnOnJldmlzaW9uIiA6IDMsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogbnVsbAogIH0sIHsKICAgICJzYmc6bW9kaWZpZWRCeSIgOiAibWFya29wIiwKICAgICJzYmc6bW9kaWZpZWRPbiIgOiAxNDY5MDE1MTUxLAogICAgInNiZzpyZXZpc2lvbiIgOiA0LAogICAgInNiZzpyZXZpc2lvbk5vdGVzIiA6ICJMaW5rIGZhc3RxX2xpc3QiCiAgfSwgewogICAgInNiZzptb2RpZmllZEJ5IiA6ICJ2bGFkaW1pcmsiLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0NzIwNTk3OTUsCiAgICAic2JnOnJldmlzaW9uIiA6IDUsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogIkFkZGVkIHN1cHBvcnQgZm9yIHNpbmdsZSBmaWxlLiIKICB9LCB7CiAgICAic2JnOm1vZGlmaWVkQnkiIDogImJpeC1kZW1vIiwKICAgICJzYmc6bW9kaWZpZWRPbiIgOiAxNDg5NTEwMzIwLAogICAgInNiZzpyZXZpc2lvbiIgOiA2LAogICAgInNiZzpyZXZpc2lvbk5vdGVzIiA6IG51bGwKICB9LCB7CiAgICAic2JnOm1vZGlmaWVkQnkiIDogIm5pa29sYV9qb3Zhbm92aWMiLAogICAgInNiZzptb2RpZmllZE9uIiA6IDE0ODk2NjUwNDYsCiAgICAic2JnOnJldmlzaW9uIiA6IDcsCiAgICAic2JnOnJldmlzaW9uTm90ZXMiIDogbnVsbAogIH0gXSwKICAic2JnOnZhbGlkYXRpb25FcnJvcnMiIDogWyBdCn0=",
  "status" : "COMPLETED",
  "inputs" : {
    "fastq_list" : [ {
      "size" : 6658418440,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTQ_Quality_Adjuster/1/C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "name" : "C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "checksum" : "sha1$8ac4486c0dc0f7134bc51f60a5258fbfab4545ae",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "1",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }, {
      "size" : 6658418440,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTQ_Quality_Adjuster/2/C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "name" : "C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "checksum" : "sha1$a1413be27d3aaf6b5cf243682c7f74b3988f9e4d",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "2",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "tuple_list" : [ [ {
      "size" : 6658418440,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "name" : "C835.HCC1143_BL.4.converted.pe_1.std.fastq",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "1",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }, {
      "size" : 6658418440,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Pair_FASTQs_by_Metadata/C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "name" : "C835.HCC1143_BL.4.converted.pe_2.std.fastq",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "2",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ] ]
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}