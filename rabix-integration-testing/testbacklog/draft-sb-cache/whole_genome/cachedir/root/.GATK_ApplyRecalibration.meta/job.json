{
  "id" : "fd6d4bfa-b125-4428-850f-dc647bc15152",
  "parentId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "rootId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "name" : "root.GATK_ApplyRecalibration",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 1,
    "memory_per_job" : 20000,
    "mode" : "SNP",
    "recal_file" : [ {
      "size" : 6788732,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "checksum" : "sha1$ebf9cf60f109ecccaf2b48a53fd9da90ff42c658",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16522,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$2c3380485dbf623de2fa52a8a9647cdf0850d936",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "threads_per_job" : 32,
    "tranches_file" : [ {
      "size" : 546,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "checksum" : "sha1$ebc4d1417740648ed12a8bd2d7dcbdf8b5ef214b",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "ts_filter_level" : 99,
    "variants" : [ {
      "size" : 24976122,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "checksum" : "sha1$c2c8c113595f64905e136b9add79b8599bd9a9f5",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 885168,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "checksum" : "sha1$4f0ce14aee8f4a068fdd0c088671d86e2cfcc16c",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "vcf" : {
      "size" : 27696295,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_ApplyRecalibration/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recalibrated.vcf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_ApplyRecalibration/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recalibrated.vcf",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recalibrated.vcf",
      "checksum" : "sha1$5c8195fddb81d641260c23aa2a71e00437691991",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}