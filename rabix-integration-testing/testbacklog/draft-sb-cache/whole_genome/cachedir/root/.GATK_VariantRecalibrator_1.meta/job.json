{
  "id" : "d7ec5a9f-fb3e-4313-9d2a-82ca04b309c1",
  "parentId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "rootId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "name" : "root.GATK_VariantRecalibrator_1",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "cpu_per_job" : 1,
    "max_gaussians" : 4,
    "memory_per_job" : 20000,
    "min_num_bad_variants" : 1000,
    "mode" : "INDEL",
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16522,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$2c3380485dbf623de2fa52a8a9647cdf0850d936",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "resources_files" : [ {
      "size" : 86369975,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Prepare_VQSR_Mills/Mills_and_1000G_gold_standard.indels.b37.vcf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Prepare_VQSR_Mills/Mills_and_1000G_gold_standard.indels.b37.vcf",
      "name" : "Mills_and_1000G_gold_standard.indels.b37.vcf",
      "checksum" : "sha1$414c7ab361dc659f63f42ae0585e24dcc7376366",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "resources" : "-resource:mills,known=true,training=true,truth=true,prior=12",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }, {
      "size" : 8436107210,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Prepare_VQSR_dbSNP/dbsnp_137.b37.vcf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_Prepare_VQSR_dbSNP/dbsnp_137.b37.vcf",
      "name" : "dbsnp_137.b37.vcf",
      "checksum" : "sha1$6b75666629d1028bc7b792e2902e36fa9c598282",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "resources" : "-resource:dbsnp,known=false,training=true,truth=true,prior=2"
        }
      },
      "$type" : "File"
    } ],
    "threads_per_job" : 32,
    "use_annotation" : [ "QD", "DP", "FS", "ReadPosRankSum", "MQRankSum" ],
    "variants" : [ {
      "size" : 24976122,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf",
      "checksum" : "sha1$c2c8c113595f64905e136b9add79b8599bd9a9f5",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 885168,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_CombineVariants/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.vcf.idx",
        "checksum" : "sha1$4f0ce14aee8f4a068fdd0c088671d86e2cfcc16c",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "R_plots" : {
      "size" : 10745842,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R.pdf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R.pdf",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R.pdf",
      "checksum" : "sha1$55b003876b82a7e8ca9da45b26b4401b071a7934",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    },
    "recal_file" : {
      "size" : 415072,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal",
      "checksum" : "sha1$e98eea8ccd7cd5632c972d88f7c3046ba05adf4c",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    },
    "rscript_file" : {
      "size" : 4105818,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.recal.R",
      "checksum" : "sha1$9bddb5827ff83ba14f3cef92abe0ebd599b9883a",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    },
    "tranches_file" : {
      "size" : 562,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches",
      "checksum" : "sha1$983510143449449b6b76ec7cc564af60970602fe",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    },
    "tranches_plot" : {
      "size" : 7913,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches.pdf",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/GATK_VariantRecalibrator_1/Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches.pdf",
      "name" : "Sample_HCC1143BL.Library_Unknown.Platform_Unit_Unknown.combined.tranches.pdf",
      "checksum" : "sha1$3b02aef59a87cb17e9b50ae1831664544a0d4a51",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}