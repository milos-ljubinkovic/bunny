{
  "id" : "c3c62cd0-85f4-481f-b529-50a629ba828b",
  "parentId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "rootId" : "1a4fd24b-5bec-4e9e-b3f2-5fd1312ea058",
  "name" : "root.Picard_CollectAlignmentSummaryMetrics",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "assume_sorted" : "true",
    "compression_level" : 5,
    "input_bam" : [ {
      "size" : 5552213851,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bam",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bam",
      "name" : "HCC1143BL_ed.merged.bam",
      "checksum" : "sha1$b08aa0e779081c5410d6b6989729fde049db1353",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 5454328,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bam.bai",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bam.bai",
        "name" : "HCC1143BL_ed.merged.bam.bai",
        "checksum" : "sha1$f7e83c919c42916f7ea572668cf0aa1fe08ad3d1",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bai",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Sambamba_Merge/HCC1143BL_ed.merged.bai",
        "name" : "HCC1143BL_ed.merged.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : null
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ],
    "is_bisulfite_sequenced" : "false",
    "max_insert_size" : 100000,
    "metric_accumulation_level" : [ "ALL_READS" ],
    "quiet" : "false",
    "reference" : [ {
      "size" : 3189750467,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 2813,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.fasta.fai",
        "name" : "human_g1k_v37_decoy.fasta.fai",
        "checksum" : "sha1$655334a26593e48e5047a45d219553107e96c675",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 16522,
        "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/SBG_FASTA_Indices/human_g1k_v37_decoy.dict",
        "name" : "human_g1k_v37_decoy.dict",
        "checksum" : "sha1$2c3380485dbf623de2fa52a8a9647cdf0850d936",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : { }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : { }
      },
      "$type" : "File"
    } ],
    "validation_stringency" : "SILENT",
    "verbosity" : "INFO"
  },
  "outputs" : {
    "summary_metrics" : {
      "size" : 2131,
      "path" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Picard_CollectAlignmentSummaryMetrics/HCC1143BL_ed.merged.summary_metrics.txt",
      "location" : "/media/storage/workdir/LocalRerun20170721110425/app-2017-07-21-114527.26/root/Picard_CollectAlignmentSummaryMetrics/HCC1143BL_ed.merged.summary_metrics.txt",
      "name" : "HCC1143BL_ed.merged.summary_metrics.txt",
      "checksum" : "sha1$f7af75ee6a93ccbbd28ece656d49011317b8c5a2",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143BL",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143BL",
          "sample_type" : "EBV Immortalized Normal",
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "summary_metrics" ]
}