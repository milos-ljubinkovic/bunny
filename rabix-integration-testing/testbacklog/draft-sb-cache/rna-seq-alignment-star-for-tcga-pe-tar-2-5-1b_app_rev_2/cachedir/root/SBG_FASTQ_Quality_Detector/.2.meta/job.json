{
  "id" : "7b851130-c2b1-4388-8a02-f2db099c2775",
  "parentId" : "dd3019a0-d239-4dfc-bf51-8da6585dcae0",
  "rootId" : "a5671f19-34f6-4297-9fef-dd4e9f670423",
  "name" : "root.SBG_FASTQ_Quality_Detector.2",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "fastq" : [ {
      "size" : 18653028380,
      "path" : "/media/storage/workdir/LocalRerun20170801163935/app-2017-08-02-115623.231/root/SBG_Unpack_FASTQs/decompressed_files/G20479.HCC1143.2.converted.pe_1.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170801163935/app-2017-08-02-115623.231/root/SBG_Unpack_FASTQs/decompressed_files/G20479.HCC1143.2.converted.pe_1.fastq",
      "name" : "G20479.HCC1143.2.converted.pe_1.fastq",
      "checksum" : "sha1$e31f47f69a6a7e1717427918371abeff5ceb8091",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "1",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "result" : {
      "path" : "/media/storage/workdir/LocalRerun20170801163935/app-2017-08-02-115623.231/root/SBG_FASTQ_Quality_Detector/2/G20479.HCC1143.2.converted.pe_1.fastq",
      "location" : "/media/storage/workdir/LocalRerun20170801163935/app-2017-08-02-115623.231/root/SBG_FASTQ_Quality_Detector/2/G20479.HCC1143.2.converted.pe_1.fastq",
      "name" : "G20479.HCC1143.2.converted.pe_1.fastq",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "paired_end" : "1",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}