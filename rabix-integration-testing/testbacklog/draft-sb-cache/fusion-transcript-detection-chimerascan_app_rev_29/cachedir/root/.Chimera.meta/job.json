{
  "id" : "5146d532-fda0-44fa-a37c-1bc0bcacc0a7",
  "parentId" : "5bc0100b-f583-4d37-9944-994c7facc310",
  "rootId" : "5bc0100b-f583-4d37-9944-994c7facc310",
  "name" : "root.Chimera",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "filterfusionnames" : "ABL",
    "filterlist" : "annotated.genes",
    "filterminsupport" : 7,
    "fusion_data" : [ {
      "size" : 448345,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/ChimeraScan_Run/chimeras_out/G20479.chimeras.bedpe",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/ChimeraScan_Run/chimeras_out/G20479.chimeras.bedpe",
      "name" : "G20479.chimeras.bedpe",
      "checksum" : "sha1$e7f940c6e46b8faeb608db2a38e7475a07e1e93b",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    } ],
    "fusionfinder" : "chimerascan",
    "minsupport" : 5,
    "organism" : "hg19"
  },
  "outputs" : {
    "circos_links" : {
      "size" : 602,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions4circoslinks.txt",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions4circoslinks.txt",
      "name" : "G20479.chimerascan.chimera.filteredfusions4circoslinks.txt",
      "checksum" : "sha1$009357deb40b5bfe30984dab435e8bce98c8aba4",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    },
    "circos_names" : {
      "size" : 785,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions4circosnames.txt",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions4circosnames.txt",
      "name" : "G20479.chimerascan.chimera.filteredfusions4circosnames.txt",
      "checksum" : "sha1$1bc98daea252d69389b20a67957faaf52b8c2d4c",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    },
    "detected_fusions" : {
      "size" : 3395,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.detectedfusions.txt",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.detectedfusions.txt",
      "name" : "G20479.chimerascan.chimera.detectedfusions.txt",
      "checksum" : "sha1$f34a47920387811ccc63d97f4c57eb9a6df583d3",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "fusion_data",
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    },
    "filtered_annotated_fusions" : {
      "size" : 273,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions_annotated.txt",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions_annotated.txt",
      "name" : "G20479.chimerascan.chimera.filteredfusions_annotated.txt",
      "checksum" : "sha1$b8957cabafde18d0267f8a55e3802ccbf97fddac",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : null
      },
      "$type" : "File"
    },
    "filtered_fusions" : {
      "size" : 255,
      "path" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions.txt",
      "location" : "/media/storage2/workdir/LocalRerun20170815095410/app-2017-08-15-105247.45/root/Chimera/G20479.chimerascan.chimera.filteredfusions.txt",
      "name" : "G20479.chimerascan.chimera.filteredfusions.txt",
      "checksum" : "sha1$e5762c24c30556fa32dd0ac82d4c75997db920e1",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "fusion_data",
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "RNA-Seq",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "reference_genome" : "HG19_Broad_variant",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ "filtered_annotated_fusions", "filtered_fusions", "detected_fusions" ]
}