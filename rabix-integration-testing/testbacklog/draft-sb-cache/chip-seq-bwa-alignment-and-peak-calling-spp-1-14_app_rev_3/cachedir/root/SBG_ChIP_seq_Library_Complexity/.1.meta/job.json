{
  "id" : "890db212-c981-4f37-a3c3-482aaa33b07a",
  "parentId" : "a0f9bcc9-1b2c-49b3-83b1-6975c309575a",
  "rootId" : "9f1dff12-c79b-4dbd-9b71-b2610b2b3bc9",
  "name" : "root.SBG_ChIP_seq_Library_Complexity.1",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "input_files" : [ {
      "size" : 404996387,
      "path" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bam",
      "location" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bam",
      "name" : "NRSF_K562_control_rep1.deduped.bam",
      "checksum" : "sha1$a3cf37bd9d512091020155fd7b664e9afe1132e7",
      "secondaryFiles" : [ {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bai",
        "name" : "NRSF_K562_control_rep1.deduped.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : {
            "__inherit__" : "input_bam",
            "case_id" : "1",
            "chip-seq" : "control",
            "sample_id" : "NRSF_K562_control_rep1"
          }
        },
        "$type" : "File"
      }, {
        "$type" : "File",
        "size" : 0,
        "path" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bam.bai",
        "location" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.deduped.bam.bai",
        "name" : "NRSF_K562_control_rep1.deduped.bam.bai",
        "secondaryFiles" : [ ],
        "properties" : {
          "sbg:metadata" : {
            "__inherit__" : "input_bam",
            "case_id" : "1",
            "chip-seq" : "control",
            "sample_id" : "NRSF_K562_control_rep1"
          }
        },
        "$type" : "File"
      } ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "input_bam",
          "case_id" : "1",
          "chip-seq" : "control",
          "sample_id" : "NRSF_K562_control_rep1"
        }
      },
      "$type" : "File"
    }, {
      "size" : 1251,
      "path" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.metrics",
      "location" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/Picard_MarkDuplicates_1/1/NRSF_K562_control_rep1.metrics",
      "name" : "NRSF_K562_control_rep1.metrics",
      "checksum" : "sha1$86072d5bd845ab14081405aa6cf9cf6bd2fd570f",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "input_bam",
          "case_id" : "1",
          "chip-seq" : "control",
          "sample_id" : "NRSF_K562_control_rep1"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "metrics_json" : {
      "size" : 209,
      "path" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/SBG_ChIP_seq_Library_Complexity/1/NRSF_K562_control_rep1.deduped.libcomp.qc.json",
      "location" : "/media/storage2/workdir/LocalRerun20170816150257/app-2017-08-16-151652.488/root/SBG_ChIP_seq_Library_Complexity/1/NRSF_K562_control_rep1.deduped.libcomp.qc.json",
      "name" : "NRSF_K562_control_rep1.deduped.libcomp.qc.json",
      "checksum" : "sha1$d25147de80e8ce893c24fd605ade8fe24e20e035",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "__inherit__" : "input_bam",
          "case_id" : "1",
          "chip-seq" : "control",
          "sample_id" : "NRSF_K562_control_rep1"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}