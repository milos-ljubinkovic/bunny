{
  "id" : "b8ef7b8d-7b39-4c29-84fe-b7d6349aabc8",
  "parentId" : "1c8537d3-366a-4ce0-8265-ae459c60ee38",
  "rootId" : "0d3c0010-c58a-4152-808a-9ef16f9314e1",
  "name" : "root.SAMtools_Mpileup.12",
  "app" : "data:text/plain;base64,",
  "status" : "COMPLETED",
  "inputs" : {
    "chr_pos_list_file" : [ {
      "size" : 15,
      "path" : "/media/storage/workdir/LocalRerun20170801142306/app-2017-08-01-145621.118/root/SBG_Prepare_Intervals/Intervals/12.bed",
      "location" : "/media/storage/workdir/LocalRerun20170801142306/app-2017-08-01-145621.118/root/SBG_Prepare_Intervals/Intervals/12.bed",
      "name" : "12.bed",
      "checksum" : "sha1$893f01090abc408a64ef9ea61d276cd7217d727c",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "sbg_scatter" : "true"
        }
      },
      "$type" : "File"
    } ],
    "input_bam_files" : [ {
      "size" : 5645361631,
      "path" : "/media/storage/workdir/LocalRerun20170801142306/app-2017-08-01-145621.118/root/SAMtools_Mpileup/12/C835.HCC1143.2.converted.realigned.base_recalibrated.bam",
      "location" : "/media/storage/workdir/LocalRerun20170801142306/files/C835.HCC1143.2.converted.realigned.base_recalibrated.bam",
      "name" : "C835.HCC1143.2.converted.realigned.base_recalibrated.bam",
      "checksum" : "sha1$ab08d72d724ec30458cdbc75ffee0476ae05e066",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    } ],
    "output_format" : "PILEUP",
    "reference_fasta_file" : [ {
      "size" : 3189750467,
      "path" : "/media/storage/workdir/LocalRerun20170801142306/files/human_g1k_v37_decoy.fasta",
      "location" : "/media/storage/workdir/LocalRerun20170801142306/files/human_g1k_v37_decoy.fasta",
      "name" : "human_g1k_v37_decoy.fasta",
      "checksum" : "sha1$992291353a574f76f4be22ed6e37a64bf37e215f",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "species" : "Homo sapiens"
        }
      },
      "$type" : "File"
    } ]
  },
  "outputs" : {
    "output_pileup_vcf_or_bcf_file" : {
      "size" : 502511869,
      "path" : "/media/storage/workdir/LocalRerun20170801142306/app-2017-08-01-145621.118/root/SAMtools_Mpileup/12/C835.HCC1143.2.converted.realigned.base_recalibrated_12.pileup",
      "location" : "/media/storage/workdir/LocalRerun20170801142306/app-2017-08-01-145621.118/root/SAMtools_Mpileup/12/C835.HCC1143.2.converted.realigned.base_recalibrated_12.pileup",
      "name" : "C835.HCC1143.2.converted.realigned.base_recalibrated_12.pileup",
      "checksum" : "sha1$b58287d31406463b2a657c6b2ffce004c1a00171",
      "secondaryFiles" : [ ],
      "properties" : {
        "sbg:metadata" : {
          "ScatteredUsing" : "12",
          "case_id" : "CCLE-HCC1143",
          "experimental_strategy" : "WXS",
          "investigation" : "CCLE-BRCA",
          "platform" : "Illumina",
          "quality_scale" : "sanger",
          "reference_genome" : "human_g1k_v37_decoy",
          "sample_id" : "HCC1143",
          "sample_type" : "Cell Line"
        }
      },
      "$type" : "File"
    }
  },
  "resources" : {
    "cpu" : 32,
    "memMB" : 46967,
    "diskSpaceMB" : null,
    "networkAccess" : true,
    "workingDir" : null,
    "tmpDir" : null,
    "outDirSize" : null,
    "tmpDirSize" : null
  },
  "visiblePorts" : [ ]
}